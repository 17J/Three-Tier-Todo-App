name: Three-Tier App CI/CD

on:
  push:
    branches: [ "main" ]  # ðŸ‘ˆ In prod, consider deploying only from 'main' or release branches

permissions:
  id-token: write  # ðŸ‘ˆ Required for Azure OIDC login
  contents: read

jobs:
  frontend-build:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install and Build React App
      working-directory: frontend
      run: |
        npm ci  # ðŸ‘ˆ More reliable for production builds
        npm run build

    - name: Docker Build and Push (Frontend)
      run: |
        docker build -t 17rj/three-tier-todo-frontend:latest frontend/
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker push 17rj/three-tier-todo-frontend:latest

  backend-build:
    needs: frontend-build
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4

    - name: Setup JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Build Java Backend with Maven
      working-directory: backend
      run: |
        mvn clean verify  # ðŸ‘ˆ 'verify' ensures unit/integration tests run

    - name: Docker Build and Push (Backend)
      run: |
        docker build -t 17rj/three-tier-todo-backend:latest backend/
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker push 17rj/three-tier-todo-backend:latest

  deploy-k8s-aks:
    needs: backend-build
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4

    - name: Azure login via OIDC
      uses: azure/login@v1.4.6
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Set AKS context
      uses: azure/aks-set-context@v3
      with:
        resource-group: devk8s
        cluster-name: devk8s

    - name: Deploy Kubernetes Manifests
      run: |
        kubectl apply -f K8s/

    # âœ… Optional for production
    # - name: Verify Deployment
    #   run: |
    #     kubectl rollout status deployment frontend-deployment -n default
    #     kubectl rollout status deployment backend-deployment -n default
