
name: Node.js CI

on:
  push:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read
  
jobs:
  frontend-build:
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4
    - name: Use node
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install and Build
      working-directory: frontend
      run: |
        npm install
        npm run build
    - name: Docker Build and Push
      run: |
        docker build -t 17rj/three-tier-todo-frontend  frontend/
        echo  ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker push 17rj/three-tier-todo-frontend:latest
  
  backend-build:
    needs: frontend-build
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        working-directory: backend
        run: mvn clean package

      - name: Docker Build and Push (Backend)
        run: |
          docker build -t 17rj/three-tier-todo-backend backend/
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push 17rj/three-tier-todo-backend

  deploy-k8s-aks:
    needs: backend-build
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          
      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: devk8s
          cluster-name: devk8s

      - name: Deploy manifests to AKS
        run: |
          kubectl apply -f K8s/
    

    
